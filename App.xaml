<Application x:Class="QuanLiQuanAn.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:QuanLiQuanAn"
             StartupUri="Views/MainWindow.xaml"
             >
    <Application.Resources>
        <FontFamily x:Key="Montserrat">/Assets/Fonts/#Montserrat Alternates</FontFamily>
        <FontFamily x:Key="Kaushan">/Assets/Fonts/#Kaushan Script</FontFamily>
        <FontFamily x:Key="FontAwesome">/Assets/Fonts/#Font Awesome 6 Free Solid</FontFamily>



        <Style x:Key="ModalCombobox" TargetType="ComboBox">
            <Setter Property="Background" Value="#F5D5C2"/>
            <Setter Property="Foreground" Value="#42150D"/>
            <Setter Property="Margin" Value="20 48 20 0"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border BorderThickness="0" CornerRadius="18" Background="#F5D5C2">
                                <Grid>
                                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" 
                                          VerticalAlignment="Center" 
                                          Margin="10,0,30,0"/>
                                    <ToggleButton x:Name="ToggleButton" Grid.Column="1"
                                      Width="68" Height="80" 
                                      HorizontalAlignment="Right"
                                      HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Background="#B03A25"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <TextBlock FontFamily="{StaticResource FontAwesome}" Text="&#xf0d7;" Foreground="#FFEDDB" FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Center" Height="60" Width="28"/>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        StaysOpen="False" AllowsTransparency="True">
                                <Border BorderThickness="1" Background="#F5D5C2"
                            MinWidth="{TemplateBinding ActualWidth}">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModalTextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="20 48 20 0"/>
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#F5D5C2"/>
            <Setter Property="Foreground" Value="#42150D"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Border" BorderThickness="0" CornerRadius="18" 
                    Background="#F5D5C2" 
                    Padding="5">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ApplyButton" TargetType="Button">
            <Setter Property="Background" Value="#B03A25"/>
            <Setter Property="Margin" Value="10 24 20 24"/>
            <Setter Property="Foreground" Value="#F5EFDF"/>
            <Setter Property="FontFamily" Value="{StaticResource Montserrat}"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                 Background="{TemplateBinding Background}"
                 BorderThickness="0"
                 CornerRadius="14">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#E55F41"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E55F41"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        <Style x:Key="CircularProgressBar" TargetType="ProgressBar">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="IsIndeterminate" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <Ellipse Width="50"
                                     Height="50"
                                     RenderTransformOrigin="0.5,0.5"
                                     Stroke="#BC4C33"
                                     StrokeDashArray="10"
                                     StrokeDashCap="Round"
                                     StrokeThickness="10">
                                <Ellipse.RenderTransform>
                                    <RotateTransform/>
                                </Ellipse.RenderTransform>
                                <Ellipse.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                                                                From="0" To="360"
                                                                                Duration="0:0:1"
                                                                                RepeatBehavior="Forever"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Ellipse.Triggers>
                            </Ellipse>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
